export type PageData = {
    slug: string;
    title: string;
    subtitle?: string;
    content: Block[];
};

// üëá –û–ø–∏—Å–∞–Ω–∏–µ –±–ª–æ–∫–æ–≤
export type HeadingBlock = {
    type: "heading";
    level: number;
    text: string;
};

export type TextBlock = {
    type: "text";
    rich: InlineElement[];
};

export type ImageBlock = {
    type: "image";
    src: string;
    alt?: string;
    caption?: string;
    float?: "left" | "right";
};

export type SliderBlock = {
    type: "slider";
    slides: SlideData[];
};

export type SlideData = {
    title: string;
    subtitle: string;
    image: string;
    link: string;
};

export type ListBlock = {
    type: "list";
    items: InlineElement[][];
    ordered?: boolean;
};

export type ButtonBlock = {
    type: "button";
    text: string;
    href: string;
};

export type InfoBlock = {
    type: "info";
    title: string;
    description: InlineElement[];
    image: {
        src: string;
        alt?: string;
    };
    button?: {
        text: string;
        href: string;
    };
    imagePosition?: "left" | "right";
};

// ‚úÖ –ù–æ–≤—ã–π –±–ª–æ–∫: –°—á—ë—Ç—á–∏–∫–∏
export type CountersBlock = {
    type: "counters";
    items: {
        to: number;
        label: string;
    }[];
    bgColor?: string; // Tailwind –∫–ª–∞—Å—Å –¥–ª—è —Ñ–æ–Ω–∞
};

// ü§ò –î–æ–±–∞–≤—å –ª—é–±—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–ª–æ–∫–∏ —Å—é–¥–∞
// export type ProgramBlock = { ... }

export type InlineElement =
    | { type: "text"; text: string }
    | { type: "bold"; content: InlineElement[] }
    | { type: "italic"; content: InlineElement[] }
    | { type: "link"; text: string; href: string }
    | { type: "image"; src: string; alt?: string };

// üëá –ì–ª–∞–≤–Ω—ã–π —Ç–∏–ø –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –±–ª–æ–∫–æ–≤
export type HeroBlock = {
    type: "hero";
    image: string;
    title: string;
    subtitle?: string;
};

export type Block =
    | HeadingBlock
    | TextBlock
    | ImageBlock
    | SliderBlock
    | ListBlock
    | ButtonBlock
    | InfoBlock
    | CountersBlock
    | HeroBlock;
